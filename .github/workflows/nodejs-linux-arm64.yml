# This is a basic workflow to help you get started with Actions

name: Build NodeJS Linux Arm64

on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs apt-get
      - name: Install GCC, G++, and other needed tools...
        run: sudo apt-get install python3 python3-pip gcc make cmake git crossbuild-essential-arm64 binutils-aarch64-linux-gnu g++-aarch64-linux-gnu gcc-aarch64-linux-gnu -y

      # Runs git clone
      - name: Clone the NodeJS Repo
        run: git clone --branch v16.14.0 --depth 1 https://github.com/NodeJS/Node NodeJS

      - name: Clone Javet
        run: |
          git clone --branch 1.1.0 --depth 1 https://github.com/caoccao/Javet Javet
          cp ${GITHUB_WORKSPACE}/CMakeLists.txt Javet/CMakeLists.txt

      - name: Configure the NodeJS build
        working-directory: ./NodeJS
        run: |
          python3 ../Javet/scripts/python/patch_node_build.py -p .
          CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ CC_host="gcc" CXX_host="g++" ./configure --prefix=../install --enable-static --without-intl --dest-cpu=arm64 --cross-compiling --dest-os=linux --with-arm-float-abi=hard --with-arm-fpu=neon
          python3 ../Javet/scripts/python/patch_node_build.py -p .

      - name: Build NodeJS
        working-directory: ./NodeJS
        run: make -j4

      - name: Build Javet
        working-directory: ./Javet/cpp
        run: |
          export NODE_HOME=$(realpath ../../NodeJS)
          export JAVET_HOME=$(realpath ..)
          # CMAKE_C_COMPILER=aarch64-linux-gnu-gcc
          # CMAKE_CXX_COMPILER=aarch64-linux-gnu-g++
          sh build-linux.sh -DNODE_DIR=${NODE_HOME} -DTARGET_ARCH=arm64 -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++

      - name: Upload output .so file
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            Javet/src/main/resources/libjavet-node-linux-arm64.v.1.1.0.so
